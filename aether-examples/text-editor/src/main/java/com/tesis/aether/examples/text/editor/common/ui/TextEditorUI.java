/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TextEditorUI.java
 *
 * Created on Mar 8, 2011, 3:29:06 PM
 */

package com.tesis.aether.examples.text.editor.common.ui;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.Properties;

import com.tesis.aether.examples.text.editor.common.CloudAdapter;

/**
 * 
 * @author Kireta
 */
public abstract class TextEditorUI extends javax.swing.JFrame {

	private Properties properties = new Properties();
	protected String accessKey = "text.editor.accessKey";
	protected String secretKey = "text.editor.secretKey";
	protected String bucket = "text.editor.bucket";
	protected String file = "text.editor.file";
	protected String localFile = "temp.txt";

	/**
	 * Creates new form TextEditorUI
	 * 
	 * @throws IOException
	 * @throws MalformedURLException
	 */
	public TextEditorUI() throws MalformedURLException, IOException {
		initComponents();
		properties.load(new File("properties.properties").toURI().toURL().openStream());
		getCloud().connect(properties.getProperty(accessKey), properties.getProperty(secretKey));
		getCloud().downloadFile(properties.getProperty(file), properties.getProperty(bucket), localFile);
		String readFileAsString = readFileAsString(localFile);
		jTextArea1.setText(readFileAsString);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		saveButton = new javax.swing.JButton();
		exitButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jTextArea1.setColumns(20);
		jTextArea1.setRows(5);
		jScrollPane1.setViewportView(jTextArea1);

		saveButton.setText("Save");
		saveButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				saveButtonActionPerformed(evt);
			}
		});

		exitButton.setText("Exit");
		exitButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
										.addGroup(layout.createSequentialGroup().addComponent(saveButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(exitButton))).addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(saveButton).addComponent(exitButton)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_exitButtonActionPerformed
		System.exit(0);
	}// GEN-LAST:event_exitButtonActionPerformed

	private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveButtonActionPerformed

		new File(localFile).delete();

		try {
			BufferedWriter out = new BufferedWriter(new FileWriter(localFile));
			out.write(jTextArea1.getText());
			out.close();
			
			getCloud().uploadFile(properties.getProperty(file), properties.getProperty(bucket), localFile);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}// GEN-LAST:event_saveButtonActionPerformed

	public static String readFileAsString(String filePath) {
		try {
			StringBuffer fileData = new StringBuffer(1000);
			BufferedReader reader = new BufferedReader(new FileReader(filePath));
			char[] buf = new char[1024];
			int numRead = 0;
			while ((numRead = reader.read(buf)) != -1) {
				String readData = String.valueOf(buf, 0, numRead);
				fileData.append(readData);
				buf = new char[1024];
			}
			reader.close();
			return fileData.toString();
		} catch (Exception e) {
			return null;
		}
	}

	protected abstract CloudAdapter getCloud();

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton exitButton;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea jTextArea1;
	private javax.swing.JButton saveButton;
	// End of variables declaration//GEN-END:variables

}
